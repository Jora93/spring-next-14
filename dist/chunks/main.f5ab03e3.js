var o={};Object.defineProperty(o,"__esModule",{value:!0});o.CartesianProduct=o.PowerSet=o.BaseN=A=o.Combination=o.Permutation=o.randomInteger=o.combinadic=o.factoradic=o.factorial=o.combination=o.permutation=o.version=void 0;o.version="1.4.5";const i=typeof BigInt=="function"?BigInt:Number,d=r=>r<=Number.MAX_SAFE_INTEGER?Number(r):i(r);function p(r,t){if(r<0)throw new RangeError("negative n is not acceptable");if(t<0)throw new RangeError("negative k is not acceptable");if(t==0)return 1;if(r<t)return 0;[r,t]=[i(r),i(t)];let e=i(1);for(;t--;)e*=r--;return d(e)}o.permutation=p;function f(r,t){if(t==0||r==t)return 1;if(r<t)return 0;const e=p,n=i(e(r,t))/i(e(t,t));return d(n)}o.combination=f;function y(r){return p(r,r)}o.factorial=y;function N(r,t=0){if(r<0)return;let[e,n]=[i(r),i(1)];if(t)n=i(y(t));else{for(t=1;n<e;n*=i(++t));e<n&&(n/=i(t--))}let s=[0];for(;t;n/=i(t--))s[t]=Math.floor(Number(e/n)),e%=n;return s}o.factoradic=N;function z(r,t){const e=f(r,t);return n=>{if(n<0||e<=n)return;let s=[],[c,h]=[r,t],u=i(e)-i(1)-i(n);for(let a=0;a<t;a++){for(c--;u<f(c,h);)c--;s.push(r-1-c),u-=i(f(c,h)),h--}return s}}o.combinadic=z;const b=typeof crypto!="undefined"?crypto:{},M=typeof b.randomBytes=="function"?r=>Uint8Array.from(b.randomBytes(r)):typeof b.getRandomValues=="function"?r=>b.getRandomValues(new Uint8Array(r)):r=>Uint8Array.from(Array(r),()=>Math.random()*256);function B(r=0,t=Math.pow(2,53)){let e=r.constructor;if(arguments.length===0)return Math.floor(Math.random()*e(t));if(arguments.length==1&&([r,t]=[e(0),r]),typeof r=="number")return[r,t]=[Math.ceil(Number(r)),Math.ceil(Number(t))],Math.floor(Math.random()*(t-r))+r;const n=e(t)-e(r),s=n.toString(16).length,h=M(s).reduce((u,a)=>(u<<e(8))+e(a),e(0));return(e(h)*n>>e(s*8))+e(r)}o.randomInteger=B;class g{static of(...t){return new(Function.prototype.bind.apply(this,[null].concat(t)))}static from(t){return new(Function.prototype.bind.apply(this,[null].concat(t)))}[Symbol.iterator](){return function*(t,e){for(let n=0;n<e;n++)yield t.nth(n)}(this,this.length)}toArray(){return[...this]}get isBig(){return Number.MAX_SAFE_INTEGER<this.length}get isSafe(){return typeof BigInt!="undefined"||!this.isBig}_check(t){if(t<0)return this.length<-t?void 0:d(i(this.length)+i(t));if(!(this.length<=t))return t}nth(t){return[]}sample(){return this.nth(B(this.length))}samples(){return function*(t){for(;;)yield t.sample()}(this)}}class v extends g{constructor(t,e=0){super(),this.seed=[...t],this.size=0<e?e:this.seed.length,this.length=p(this.seed.length,this.size),Object.freeze(this)}nth(t){if(t=this._check(t),t===void 0)return;const e=this.seed.length-this.size,n=y(e);let s=N(i(t)*i(n),this.seed.length),c=this.seed.slice(),h=[];for(let u=this.seed.length-1;e<=u;u--)h.push(c.splice(s[u],1)[0]);return h}}o.Permutation=v;class P extends g{constructor(t,e=0){super(),this.seed=[...t],this.size=0<e?e:this.seed.length,this.size=e,this.length=f(this.seed.length,this.size),this.comb=z(this.seed.length,this.size),Object.freeze(this)}bitwiseIterator(){const t=this.length.constructor,[e,n,s]=[t(0),t(1),t(2)],c=u=>{const a=u&-u,l=a+u;return l+((l^u)/a>>s)};let h=(n<<t(this.size))-n;return function*(u,a){for(let _=0;_<a;_++,h=c(h)){var l=[];for(let m=h,w=0;e<m;m>>=n,w++)m&n&&l.push(u.seed[w]);yield l}}(this,this.length)}nth(t){if(t=this._check(t),t!==void 0)return this.comb(t).reduce((e,n)=>e.concat(this.seed[n]),[])}}var A=o.Combination=P;class I extends g{constructor(t,e=1){super(),this.seed=[...t],this.size=e;let n=this.seed.length;this.base=n;let s=e<1?0:Array(e).fill(i(n)).reduce((c,h)=>c*h);this.length=d(s),Object.freeze(this)}nth(t){if(t=this._check(t),t===void 0)return;let e=i(t);const n=i(this.base);let s=[];for(let h=0;h<this.size;h++){var c=e%n;s.push(this.seed[Number(c)]),e-=c,e/=n}return s}}o.BaseN=I;class C extends g{constructor(t){super(),this.seed=[...t];const e=i(1)<<i(this.seed.length);this.length=d(e),Object.freeze(this)}nth(t){if(t=this._check(t),t===void 0)return;let e=i(t),n=[];for(let s=i(0);e;e>>=i(1),s++)e&i(1)&&n.push(this.seed[Number(s)]);return n}}o.PowerSet=C;class E extends g{constructor(...t){super(),this.seed=t.map(n=>[...n]),this.size=this.seed.length;const e=this.seed.reduce((n,s)=>n*i(s.length),i(1));this.length=d(e),Object.freeze(this)}nth(t){if(t=this._check(t),t===void 0)return;let e=i(t),n=[];for(let s=0;s<this.size;s++){const c=this.seed[s].length,h=i(c),u=e%h;n.push(this.seed[s][Number(u)]),e-=u,e/=h}return n}}o.CartesianProduct=E;export{A as C};
