import{memo as P,useLayoutEffect as S}from"react";import"./index.9a33d21b.js";import{r as E}from"./casino.a461d655.js";import{C as r,d as T}from"./custom-categories.700b2888.js";import{E as n}from"./new-casino.e5c4000d.js";import{j as G}from"./index.2e7649fa.js";import{i as h}from"./new-casino.50453b68.js";import{g as _}from"./user-data.358c1cdc.js";import{d as F,u as I,e as L,a as A,f as i,C as y}from"./index.47005fb3.js";import{u as v}from"./CasinoGamesConfigsContext.b2b74c57.js";import{u as c}from"./index.17630e7e.js";import"react-dom";import"./i18next.083d61f0.js";import"./swarm-command-names.afa48e3f.js";import"./backend-status-codes.4c1943df.js";import"./lazy.73833dcd.js";import"./new-casino.c45049f4.js";import"./route-manipulation.7a3d02e7.js";import"./not-real-sports.64fc4139.js";import"./useSbRouteMatch.ecfb9430.js";import"./index.10ad49d0.js";import"./app-data.3313f084.js";import"./index.fbd937ed.js";import"./create-test-id.17a0abc8.js";import"./create-fake-array.68114bc4.js";import"./style.b04602fb.js";import"./styled-components.browser.esm.04179a03.js";import"./useTranslation.70287e96.js";import"./context.f61a2be2.js";import"./index.22f8fdf2.js";import"./index.6cdb25e4.js";import"./index.ccacb51f.js";import"./useOpenLoginPopup.9bf6877c.js";import"./index.1dfc2dcd.js";import"./useSearchParams.353231ec.js";import"./fav-data.eb686620.js";import"./useDispatch.151d3a82.js";import"./index.9eebc582.js";import"./index.5f1e48b3.js";import"./toConsumableArray.635ccf3f.js";import"./placements.2094afc0.js";import"./index.7d5f88f7.js";import"./usePredefinedStakes.892527de.js";import"./odds.3bca0cb7.js";import"./socket.c1bf8301.js";import"./batch.dcd71b53.js";import"./index.9e499441.js";import"./index.b40f854c.js";import"./maps.0cbca0c2.js";import"./useQuery.5322b9d6.js";import"./QueryClientProvider.e298e67a.js";import"./casino-data.e9191b01.js";import"./casino-data.957df014.js";import"./index.6af7a08e.js";import"./useDebounce.2f1da174.js";import"./index.e1efc537.js";const M=()=>{const{configs:u}=v(),{setIsFetchDisabled:e}=F(),{dispatchFetchParams:m}=I(),{dispatchConditionals:a}=L(),f=c(h),{selectedCategory:t}=A({configs:u}),s=c(_);return S(()=>{if(t){if(t===r.lastPlayed.id){e(!0),a({type:i.SET,payload:{loading:!0}});const C=E(f.lastPlayedCatType);s&&G(T[r.lastPlayed.id],C,o=>{var d,l;if(!o.details)return;const p=(l=(d=o==null?void 0:o.details)==null?void 0:d.game_ids)==null?void 0:l.map(g=>g._id);p.length?(m({type:y.SET,payload:{external_id:p,by_key:n.Id,category:void 0}}),e(!1),a({type:i.SET,payload:{loading:void 0}})):a({type:i.SET,payload:{emptyResults:!0,loading:!1}})})}return()=>{t&&t===r.lastPlayed.id&&(m({type:y.SET,payload:{external_id:void 0,by_key:n.Category}}),a({type:i.SET,payload:{emptyResults:void 0,loading:void 0}}),e(!1))}}},[t,s]),null},Rt=P(M);export{Rt as FetchParamsUpdaterLastPlayedGames};
