const p=e=>{e=e.replace(new RegExp(/^\s+/),""),e=e.replace(new RegExp(/\s+$/),""),e=e.replace(new RegExp(/\\/g),"/"),e=e.replace(new RegExp(/^http:\/\/|^https:\/\/|^ftp:\/\//i),""),e=e.replace(new RegExp(/^www\./i),"");const n=e;return e.match(new RegExp(/\.[a-z]{2,3}\.[a-z]{2}$/i))?e=e.replace(new RegExp(/\.[a-z]{2,3}\.[a-z]{2}$/i),""):e.match(new RegExp(/\.[a-z]{2,7}$/i))?e=e.replace(new RegExp(/\.[a-z]{2,7}$/i),""):e.match(new RegExp(/\.[a-z]{2,6}$/i))&&(e=e.replace(new RegExp(/\.[a-z]{2,6}$/i),"")),{isSubDomain:!!e.match(new RegExp(/\./g)),pureDomain:e.match(new RegExp(/\./g))?n.substring(n.indexOf(".")+1):n}},t=()=>{var a;const e=(a=window==null?void 0:window.partnerConfigs)==null?void 0:a.domain;let n="springbuilder.site";if(e){const{pureDomain:i}=p(e);i&&(n=i)}return n};export{t as g};
