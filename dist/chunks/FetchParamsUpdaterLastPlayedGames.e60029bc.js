import{memo as P,useLayoutEffect as S}from"react";import"./index.053dea56.js";import{r as E}from"./casino.9f590000.js";import{C as r,d as T}from"./custom-categories.e4debdf9.js";import{E as n}from"./new-casino.e5c4000d.js";import{j as G}from"./index.c0392060.js";import{i as h}from"./new-casino.57a07aad.js";import{g as _}from"./user-data.f480309c.js";import{d as F,u as I,e as L,a as A,f as i,C as y}from"./index.2b3f024a.js";import{u as v}from"./CasinoGamesConfigsContext.e82deb44.js";import{u as c}from"./index.ffa75b49.js";import"react-dom";import"./i18next.083d61f0.js";import"./swarm-command-names.230156ba.js";import"./backend-status-codes.80bfe624.js";import"./lazy.73833dcd.js";import"./new-casino.c4c686c0.js";import"./route-manipulation.fb85cda5.js";import"./not-real-sports.64fc4139.js";import"./useSbRouteMatch.6006fa30.js";import"./index.e56a0208.js";import"./app-data.da3833f4.js";import"./index.fbd937ed.js";import"./create-test-id.17a0abc8.js";import"./create-fake-array.68114bc4.js";import"./style.32a730b7.js";import"./styled-components.browser.esm.22f548e7.js";import"./useTranslation.70287e96.js";import"./context.f61a2be2.js";import"./index.ff41ed79.js";import"./index.68ae7eeb.js";import"./index.2ff73181.js";import"./useOpenLoginPopup.d27706ba.js";import"./index.fcbc691d.js";import"./useSearchParams.0c3b0efc.js";import"./fav-data.1c5898b7.js";import"./useDispatch.cd750ed9.js";import"./index.c41901f2.js";import"./index.092cd2c1.js";import"./toConsumableArray.19249869.js";import"./placements.f27399b1.js";import"./index.9a56940c.js";import"./usePredefinedStakes.58f7290f.js";import"./odds.334494eb.js";import"./socket.c077606d.js";import"./batch.dcd71b53.js";import"./index.59a19261.js";import"./index.9f857438.js";import"./maps.0cbca0c2.js";import"./useQuery.758207e2.js";import"./QueryClientProvider.04e144dd.js";import"./casino-data.6512dc9e.js";import"./casino-data.d1fb1a26.js";import"./index.058a83a7.js";import"./useDebounce.2f1da174.js";import"./index.1967089f.js";const M=()=>{const{configs:u}=v(),{setIsFetchDisabled:e}=F(),{dispatchFetchParams:m}=I(),{dispatchConditionals:a}=L(),f=c(h),{selectedCategory:t}=A({configs:u}),s=c(_);return S(()=>{if(t){if(t===r.lastPlayed.id){e(!0),a({type:i.SET,payload:{loading:!0}});const C=E(f.lastPlayedCatType);s&&G(T[r.lastPlayed.id],C,o=>{var d,l;if(!o.details)return;const p=(l=(d=o==null?void 0:o.details)==null?void 0:d.game_ids)==null?void 0:l.map(g=>g._id);p.length?(m({type:y.SET,payload:{external_id:p,by_key:n.Id,category:void 0}}),e(!1),a({type:i.SET,payload:{loading:void 0}})):a({type:i.SET,payload:{emptyResults:!0,loading:!1}})})}return()=>{t&&t===r.lastPlayed.id&&(m({type:y.SET,payload:{external_id:void 0,by_key:n.Category}}),a({type:i.SET,payload:{emptyResults:void 0,loading:void 0}}),e(!1))}}},[t,s]),null},Rt=P(M);export{Rt as FetchParamsUpdaterLastPlayedGames};
